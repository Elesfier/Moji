{"version":3,"sources":["client/_root/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,sCAA6D;AAC7D,0CAAyD;AACzD,6CAGmD;AAOnD,IAAa,cAAc;IAKvB,wBACY,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,YAA0B,EAC1B,mBAAwC;QAJxC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,wBAAmB,GAAnB,mBAAmB,CAAqB;QAPpD,UAAK,GAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC;IAOW,CAAC;IAExD,8BAAK,GAAL;QAAA,iBAwBC;QArBC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAC;YACnC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC1B,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;SAChC,CAAC,CAAC,SAAS,CACR,UAAA,IAAI;YACA,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CACd,CAAC;gBACC,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC5D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAClC,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;YACpE,CAAC;QAEL,CAAC,EACD,UAAA,KAAK;YACD,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAE3C,CAAC,CACJ,CAAC;IACJ,CAAC;IACL,qBAAC;AAAD,CArCA,AAqCC,IAAA;AArCY,cAAc;IAL1B,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,WAAW,EAAE,sBAAsB;KACtC,CAAC;qCAQqB,uBAAc;QACb,eAAM;QACD,mBAAW;QACV,oBAAY;QACL,2BAAmB;GAV3C,cAAc,CAqC1B;AArCY,wCAAc","file":"login.component.js","sourcesContent":["\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  AlertService,\n  HttpService,\n  LocalStorageService } from '../../_common/index';\n\n@Component({\n    moduleId: module.id,\n    templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent\n{\n    //@ViewChild(LoaderDirective) contentLoader: LoaderDirective;\n    model: any = { username: '', password: '' };\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private httpService: HttpService,\n        private alertService: AlertService,\n        private localStorageService: LocalStorageService) {}\n\n    login ()\n    {\n      //this.contentLoader.start();\n      this.httpService.post('/service/login',{\n          login: this.model.username,\n          password: this.model.password\n      }).subscribe(\n          data => {\n              if (data.type)\n              {\n                this.localStorageService.set('JOME_TOKEN', data.data.token);\n                this.router.navigate(['/moji']);\n              }\n              else\n              {\n                this.alertService.warning('Wrong Username or Email or Password.');\n              }\n              //this.contentLoader.stop();\n          },\n          error => {\n              this.alertService.error(error.message);\n              //this.contentLoader.stop();\n          }\n      );\n    }\n}\n"]}