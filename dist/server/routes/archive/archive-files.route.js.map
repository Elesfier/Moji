{"version":3,"sources":["server/routes/archive/archive-files.route.ts"],"names":[],"mappings":";;AACA,mCAAoD;AACpD,kCAA+E;AAC/E,2BAA6B;AAEhB,QAAA,YAAY,GAAG,gBAAM,EAAE,CAAC;AAIrC,oBAAY,CAAC,GAAG,CAAC,6BAA6B,EAAE,qBAAa,CAAC;IAE5D,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE;CAE/B,CAAC,EAAC,UAAC,OAAgB,EAAE,QAAkB;IAEtC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC/B,IAAI,IAAI,GAAG,SAAS,GAAG,WAAW,CAAC;IACnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACjC,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAE/C,CAAC,CAAC,CAAC;AAIH,oBAAY,CAAC,GAAG,CAAC,oBAAoB,EAAE,qBAAa,CAAC;IAEnD,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE;CAE/B,CAAC,EAAC,UAAC,OAAgB,EAAE,QAAkB;IAGtC,QAAQ,CAAC,IAAI,CAAC;QACZ,IAAI,EAAE;YACJ;gBACE,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE;gBACtB,OAAO,EAAE;oBACP,EAAE,OAAO,EAAE,cAAc,EAAE;iBAC5B;aACF;YACD;gBACE,IAAI,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE;gBACvB,OAAO,EAAE;oBACP,EAAE,OAAO,EAAE,cAAc,EAAE;iBAC5B;aACF;SACF;KACF,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC;AAIH,oBAAY,CAAC,MAAM,CAAC,oBAAoB,EAAE,qBAAa,CAAC;IAEtD,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE;CAE/B,CAAC,EAAC,UAAC,OAAgB,EAAE,QAAkB;IAGtC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,CAAC,CAAC;AAEpD,CAAC,CAAC,CAAC;AAIH,oBAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE,qBAAa,CAAC;IAEpD,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE;CAE/B,CAAC,EACF,oBAAY,CAAC,KAAK,CAAC,cAAc,EAAE,EAAE,CAAC,EACtC,UAAC,OAAgB,EAAE,QAAkB;IAGnC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,qBAAqB,EAAE,CAAC,CAAC;AAEpD,CAAC,CAAC,CAAC","file":"archive-files.route.js","sourcesContent":["\nimport { Router, Response, Request } from 'express';\nimport { IArchive, ArchiveModel, authorization, fileUploader } from '../index';\nimport * as path from 'path';\n\nexport const archiveFiles = Router();\n\n////////////////////////////////////////////////////////////////////////////////\n\narchiveFiles.get('/archive/files/download/:id', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  console.log(request.query);\n  console.log(request.params.id);\n  var file = __dirname + '/index.ts';\n  console.log(path.basename(file));\n  response.download(file, path.basename(file));\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\narchiveFiles.get('/archive/files/:id', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  //[TODO]\n  response.json({\n    rows: [\n      {\n        data: { id: 'assaas' },\n        columns: [\n          { content: 'Nazwa pliku1' }\n        ]\n      },\n      {\n        data: { id: 'assaas2' },\n        columns: [\n          { content: 'Nazwa pliku2' }\n        ]\n      }\n    ]\n  });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\narchiveFiles.delete('/archive/files/:id', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  //[TODO]\n  console.log(request.params.id);\n  console.log(request.query);\n  response.handler({ type: 'REMOVE_FILE_SUCCESS' });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\narchiveFiles.post('/archive/files/:id', authorization({\n\n  global: { mustBeLogged: true }\n\n}),\nfileUploader.array(\"archiveFiles\", 12),\n(request: Request, response: Response) => {\n\n  //[TODO]\n  console.log(request.params.id);\n  console.log(request.files);\n  response.handler({ type: 'SUCCESS_ADDING_FILE' });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n"]}