{"version":3,"sources":["client/_common/modules/architecture/simple/input/checkbox.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,sCAA2F;AAC3F,mDAAuD;AAoBvD,IAAa,uBAAuB;IASlC,iCAAoE,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAP5F,UAAK,GAAW,EAAE,CAAC;QACb,eAAU,GAAQ,SAAS,CAAC;QACnC,SAAI,GAAQ,SAAS,CAAC;QAClB,aAAQ,GAAY,KAAK,CAAC;QAExB,aAAQ,GAAG,IAAI,mBAAY,EAAE,CAAC;IAE2D,CAAC;IAE/G,0CAAQ,GAAR;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAAC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;IACrG,CAAC;IAED,+CAAa,GAAb,UAAe,KAAU;QAEvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACrC,CAAC;IAED,kDAAgB,GAAhB,UAAkB,KAAU;QAE1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IACH,8BAAC;AAAD,CAzBA,AAyBC,IAAA;AAvBiB;IAAf,YAAK,CAAC,OAAO,CAAC;;sDAAoB;AACb;IAArB,YAAK,CAAC,aAAa,CAAC;;2DAA6B;AACnC;IAAd,YAAK,CAAC,MAAM,CAAC;;qDAAuB;AAClB;IAAlB,YAAK,CAAC,UAAU,CAAC;;yDAA2B;AAExB;IAApB,aAAM,CAAC,WAAW,CAAC;;yDAA+B;AAPxC,uBAAuB;IAlBnC,gBAAS,CAAC;QACT,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,iBAAiB;QAC3B,QAAQ,EAAE,sZAaT;KACF,CAAC;IAUc,WAAA,aAAM,CAAC,iBAAU,CAAC,cAAM,OAAA,oCAAmB,EAAnB,CAAmB,CAAC,CAAC,CAAA;qCAA8B,oCAAmB;GATjG,uBAAuB,CAyBnC;AAzBY,0DAAuB","file":"checkbox.component.js","sourcesContent":["\nimport { Component, Input, Inject, forwardRef, Output, EventEmitter } from '@angular/core';\nimport { SimpleFormComponent } from './form.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'simple-checkbox',\n  template: `\n    <label\n      style=\"font-weight: normal !important;\"\n      class=\"form-check-label\">\n      <input\n        [(ngModel)]=\"bindParent[bind]\"\n        (ngModelChange)=\"onChangeModel($event)\"\n        [disabled]=\"disabled\"\n        (change)=\"onChangeCheckbox($event.currentTarget.checked)\"\n        type=\"checkbox\"\n        class=\"form-check-input\">\n      {{label}}\n    </label>\n  `\n})\nexport class SimpleCheckboxComponent\n{\n  @Input('label') label: string = '';\n  @Input('bind-parent') bindParent: any = undefined;\n  @Input('bind') bind: any = undefined;\n  @Input('disabled') disabled: boolean = false;\n\n  @Output('on-change') onChange = new EventEmitter();\n\n  constructor (@Inject(forwardRef(() => SimpleFormComponent)) private simpleFormComponent: SimpleFormComponent){}\n\n  ngOnInit ()\n  {\n    if (this.simpleFormComponent && !this.bindParent) this.bindParent =  this.simpleFormComponent.bind;\n  }\n\n  onChangeModel (value: any)\n  {\n    this.bindParent[this.bind] = value;\n  }\n\n  onChangeCheckbox (value: any)\n  {\n    this.onChange.emit(value);\n  }\n}\n"]}