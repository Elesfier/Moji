{"version":3,"sources":["client/_root/register/register.component.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,sCAAqD;AACrD,0CAAyC;AACzC,6CAE2C;AAO3C,IAAa,iBAAiB;IAW1B,2BACU,MAAc,EACd,YAA0B,EAC1B,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QAXlC,UAAK,GAAQ;YACX,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,EAAE;SACb,CAAC;IAKmC,CAAC;IAEtC,oCAAQ,GAAR;QAAA,iBA6BC;QA5BC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC9D,UAAA,IAAI;YACA,QAAQ,CAAC;YACT,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAClB,CAAC;gBACC,KAAK,cAAc;oBACjB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACjC,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;oBAChE,KAAK,CAAC;gBACR,KAAK,0BAA0B;oBAC7B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,uCAAuC,EAAE,IAAI,CAAC,CAAC;oBACvE,KAAK,CAAC;gBACR,KAAK,uBAAuB;oBAC1B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,sCAAsC,EAAE,IAAI,CAAC,CAAC;oBACtE,KAAK,CAAC;gBACR,KAAK,oCAAoC;oBACvC,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kDAAkD,EAAE,IAAI,CAAC,CAAC;oBAClF,KAAK,CAAC;YACV,CAAC;QAEL,CAAC,EACD,UAAA,KAAK;YACH,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEzC,CAAC,CACF,CAAC;IACJ,CAAC;IACL,wBAAC;AAAD,CA9CA,AA8CC,IAAA;AA9CY,iBAAiB;IAL7B,gBAAS,CAAC;QACP,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,WAAW,EAAE,yBAAyB;KACzC,CAAC;qCAcoB,eAAM;QACA,oBAAY;QACb,mBAAW;GAdzB,iBAAiB,CA8C7B;AA9CY,8CAAiB","file":"register.component.js","sourcesContent":["\nimport { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  AlertService,\n  HttpService } from '../../_common/index';\n\n@Component({\n    moduleId: module.id,\n    templateUrl: 'register.component.html'\n})\n\nexport class RegisterComponent {\n\n    //@ViewChild(LoaderDirective) contentLoader: LoaderDirective;\n    model: any = {\n      username: '',\n      email: '',\n      firstname: '',\n      lastname: '',\n      password: ''\n    };\n\n    constructor(\n      private router: Router,\n      private alertService: AlertService,\n      private httpService: HttpService) {}\n\n    register() {\n      console.log(this.model);\n      //this.contentLoader.start();\n      this.httpService.post('/service/register', this.model).subscribe(\n        data => {\n            debugger;\n            switch (data.type)\n            {\n              case 'USER_CREATED':\n                this.router.navigate(['/login']);\n                this.alertService.success('Konto zostało pomyślnie stworzone.');\n                break;\n              case 'USER_EXIST_WITH_USERNAME':\n                this.alertService.error('Istnieje użytkownik z takim username.', true);\n                break;\n              case 'USER_EXIST_WITH_EMAIL':\n                this.alertService.error('Istnieje użytkownik z takim emailem.', true);\n                break;\n              case 'USER_EXIST_WITH_EMAIL_AND_USERNAME':\n                this.alertService.error('Istnieje użytkownik z takimi username i emailem.', true);\n                break;\n            }\n            //this.contentLoader.stop();\n        },\n        error => {\n          this.alertService.error(error.message);\n          //this.contentLoader.stop();\n        }\n      );\n    }\n}\n"]}