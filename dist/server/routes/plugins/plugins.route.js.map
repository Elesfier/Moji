{"version":3,"sources":["server/routes/plugins/plugins.route.ts"],"names":[],"mappings":";;AACA,mCAAoD;AACpD,6CAAoD;AACpD,2BAA6B;AAC7B,gCAAkC;AAClC,uBAAyB;AAEZ,QAAA,OAAO,GAAG,gBAAM,EAAE,CAAC;AAEhC,IAAM,SAAS,GAAW,qBAAqB,CAAC;AAIhD,eAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,qBAAa,CAAC;IAE3C,MAAM,EAAE,EAAE,YAAY,EAAE,KAAK,EAAE;CAEhC,CAAC,EAAC,UAAC,OAAgB,EAAE,QAAkB;IAEtC,IAAI,IAAI,GAAG,SAAS,GAAG,4BAA4B,CAAC;IACpD,IAAI,KAAK,GAAG,SAAS,GAAG,8BAA8B,CAAC;IACvD,IAAI,QAAQ,GAAG,SAAS,GAAG,iCAAiC,CAAC;IAC7D,IAAI,IAAI,GAAG,SAAS,GAAG,2BAA2B,CAAC;IACnD,IAAI,MAAM,GAAG,SAAS,GAAG,6CAA6C,CAAC;IAEvE,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,UAAC,GAAG,EAAE,IAAI;QAClC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAAC,CAAC;QACrC,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC3D,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,UAAC,GAAG;YACpC,EAAE,CAAC,CAAC,GAAG,CAAC;gBAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAEjC,IAAI,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;YAEvB,GAAG,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC3B,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACvB,GAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACxB,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACvB,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAErB,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,UAAC,GAAQ;gBACxD,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAAC,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAAC,CAAC;YACtC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"plugins.route.js","sourcesContent":["\nimport { Router, Response, Request } from 'express';\nimport { authorization } from '../../_common/index';\nimport * as path from 'path';\nimport * as AdmZip from 'adm-zip';\nimport * as fs from 'fs';\n\nexport const plugins = Router();\n\nconst regexHost: RegExp = /<<<O>>>HOST<<<O>>>/g;\n\n////////////////////////////////////////////////////////////////////////////////\n\nplugins.get('/plugins/chrome', authorization({\n\n  global: { mustBeLogged: false }\n\n}),(request: Request, response: Response) => {\n\n  let icon = __dirname + '/chrome-extension/icon.png';\n  let index = __dirname + '/chrome-extension/index.html';\n  let manifest = __dirname + '/chrome-extension/manifest.json';\n  let main = __dirname + '/chrome-extension/main.js';\n  let plugin = __dirname + '/chrome-extension/moji-extension-chrome.zip';\n\n  fs.readFile(main, 'utf8', (err, data) => {\n    if (err) { return console.log(err); }\n    var result = data.replace(regexHost, request.headers.host);\n    fs.writeFile(main, result, 'utf8', (err) => {\n       if (err) return console.log(err);\n\n       let zip = new AdmZip();\n\n       zip.addLocalFile(manifest);\n       zip.addLocalFile(main);\n       zip.addLocalFile(index);\n       zip.addLocalFile(icon);\n       zip.writeZip(plugin);\n\n       response.download(plugin, path.basename(plugin), (err: any) => {\n         if (!err) { fs.unlinkSync(plugin); }\n       });\n    });\n  });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n"]}