{"version":3,"sources":["server/_model/type.model.ts"],"names":[],"mappings":";;AACA,qCAAiE;AAQhE,CAAC;AAEF,IAAI,UAAU,GAAW,IAAI,iBAAM,CAAC;IAClC,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACtC,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvC,IAAI,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE;IAC/D,OAAO,EAAE,EAAE,IAAI,EAAE,iBAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE;CACzE,CAAC,CAAC;AAEU,QAAA,SAAS,GAAiB,gBAAK,CAAQ,MAAM,EAAE,UAAU,CAAC,CAAC","file":"type.model.js","sourcesContent":["\nimport { Schema, Document, Model, Types, model } from 'mongoose';\n\nexport interface IType extends Document\n{\n  name: string;\n  value: string;\n  look: any;\n  project: Types.ObjectId;\n};\n\nlet TypeSchema: Schema = new Schema({\n  name: { type: String, required: true },\n  value: { type: String, required: true },\n  look: { type: Schema.Types.Mixed, required: true, default: {} },\n  project: { type: Schema.Types.ObjectId, ref: 'Project', required: true }\n});\n\nexport const TypeModel: Model<IType> = model<IType>('Type', TypeSchema);\n"]}