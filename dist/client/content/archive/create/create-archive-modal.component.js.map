{"version":3,"sources":["client/content/archive/create/create-archive-modal.component.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,sCAA2E;AAC3E,qCAAmD;AACnD,qCAA0C;AAO1C,IAAa,2BAA2B;IAQtC,qCAAqB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAN7C,UAAK,GAAQ,EAAE,CAAC;QAIa,oBAAe,GAAG,IAAI,mBAAY,EAAE,CAAC;IAElB,CAAC;IAIjD,iDAAW,GAAX;QAAA,iBAgBC;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC;YAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACpD,UAAA,QAAQ;YAEN,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrC,KAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACrB,CAAC,EACD,UAAA,KAAK;YAEH,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACvB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,+CAAS,GAAT;QAAA,iBAGC;QADC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG,IAAO,OAAO,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,CAAC;IACH,kCAAC;AAAD,CAlCA,AAkCC,IAAA;AA9BqB;IAAnB,gBAAS,CAAC,OAAO,CAAC;8BAAe,4BAAoB;0DAAC;AAE1B;IAA5B,aAAM,CAAC,mBAAmB,CAAC;;oEAAsC;AANvD,2BAA2B;IALvC,gBAAS,CAAC;QACT,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,sBAAsB;QAChC,WAAW,EAAE,qCAAqC;KACnD,CAAC;qCASkC,mBAAW;GARlC,2BAA2B,CAkCvC;AAlCY,kEAA2B","file":"create-archive-modal.component.js","sourcesContent":["\nimport { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { SimpleModalComponent } from '../../index';\nimport { HttpService } from '../../index';\n\n@Component({\n  moduleId: module.id,\n  selector: 'create-archive-modal',\n  templateUrl: 'create-archive-modal.component.html'\n})\nexport class CreateArchiveModalComponent\n{\n  model: any = {};\n\n  @ViewChild('modal') public modal: SimpleModalComponent;\n\n  @Output('after-add-archive') afterAddArchive = new EventEmitter();\n\n  constructor (private httpService: HttpService) {}\n\n  //[IDEA]: zeby byly archiwa podzielone na kategorie\n\n  saveArchive ()\n  {\n    //[TODO]: validation for title\n    if (this.model['title'] == undefined) return;\n    this.modal.$loader.start();\n    this.httpService.put('/archive', this.model).subscribe(\n      response => {\n        //[TODO] response management\n        this.afterAddArchive.emit(undefined);\n        this.modal.close();\n      },\n      error => {\n        //[TODO] errors management\n        console.error(error);\n      }\n    );\n  }\n\n  resetData ()\n  {\n    Object.keys(this.model).forEach((key) => { delete this.model[key]; });\n  }\n}\n"]}