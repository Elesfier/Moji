{"version":3,"sources":["server/routes/archive/archive-note.route.ts"],"names":[],"mappings":";;AACA,mCAAoD;AACpD,kCAAiE;AAEpD,QAAA,WAAW,GAAG,gBAAM,EAAE,CAAC;AAIpC,mBAAW,CAAC,GAAG,CAAC,mBAAmB,EAAE,qBAAa,CAAC;IAEjD,MAAM,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE;CAE/B,CAAC,EAAC,UAAC,OAAgB,EAAE,QAAkB;IAEtC,oBAAY;SACX,OAAO,CAAC;QACP,IAAI,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,GAAG;QACjC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE;KACvB,CAAC;SACD,QAAQ,CAAC,UAAU,CAAC;SACpB,IAAI,CAAC,UAAC,KAAU,EAAE,OAAiB;QAElC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAQ,OAAO,CAAC,QAAS,CAAC,IAAI,EAAE,CAAC,CAAC;IAExD,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"archive-note.route.js","sourcesContent":["\nimport { Router, Response, Request } from 'express';\nimport { IArchive, ArchiveModel, authorization } from '../index';\n\nexport const archiveNote = Router();\n\n////////////////////////////////////////////////////////////////////////////////\n\narchiveNote.get('/archive/note/:id', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  ArchiveModel\n  .findOne({\n    user: request['_currentUser']._id,\n    _id: request.params.id\n  })\n  .populate('noteList')\n  .exec((error: any, archive: IArchive) => {\n\n    response.json({ rows: (<any>archive.noteList).list });\n\n  });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n"]}