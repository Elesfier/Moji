{"version":3,"sources":["client/_common/services/http.service.ts"],"names":[],"mappings":"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","file":"http.service.js","sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers, URLSearchParams } from '@angular/http';\nimport { LocalStorageService } from './local-storage-service.service';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class HttpService\n{\n    private headers: Headers;\n\n    constructor (\n      private http: Http,\n      private localStorageService: LocalStorageService)\n    {\n      this.attachToken();\n    }\n\n    private attachToken ()\n    {\n      if (this.localStorageService.get('JOME_TOKEN'))\n      {\n        const token: string = this.localStorageService.get('JOME_TOKEN');\n        if (this.headers && this.headers.get('Authorization') === token) return;\n        this.headers = new Headers();\n        this.headers.append('Authorization', token);\n      }\n    }\n\n    private createURLSearchParams (searchParams: Object): any\n    {\n      let search = null;\n      if (searchParams)\n      {\n        search = new URLSearchParams();\n        Object.keys(searchParams).forEach((key)=>{\n          search.set(key, searchParams[key]);\n        });\n      }\n      return search;\n    }\n\n    post (url: string, body: Object = {}, attachToken: boolean = true)\n    {\n      if (attachToken) this.attachToken();\n      return this.http.post('/api'+url, body, {\n        headers: (attachToken)?(this.headers):(undefined)\n      }).map((response: Response) => {\n        return response.json();\n      });\n    }\n\n    patch (url: string, body: Object = {}, attachToken: boolean = true)\n    {\n      if (attachToken) this.attachToken();\n      return this.http.patch('/api'+url, body, {\n        headers: (attachToken)?(this.headers):(undefined)\n      }).map((response: Response) => {\n        return response.json();\n      });\n    }\n\n    put (url: string, body: Object = {}, attachToken: boolean = true)\n    {\n      if (attachToken) this.attachToken();\n      return this.http.put('/api'+url, body, {\n        headers: (attachToken)?(this.headers):(undefined)\n      }).map((response: Response) => {\n        return response.json();\n      });\n    }\n\n    get (url: string, search: Object = undefined, attachToken: boolean = true)\n    {\n      if (attachToken) this.attachToken();\n      return this.http.get('/api'+url, {\n        search: (search)?(this.createURLSearchParams(search)):(search),\n        headers: (attachToken)?(this.headers):(undefined)\n      }).map((response: Response) => {\n        return response.json();\n      });\n    }\n\n    //[XXX]: I need that?\n    download (url: string, search: Object = undefined, attachToken: boolean = true)\n    {\n      if (attachToken) this.attachToken();\n      return this.http.get('/api'+url, {\n        search: (search)?(this.createURLSearchParams(search)):(search),\n        headers: (attachToken)?(this.headers):(undefined)\n      });\n    }\n\n    delete (url: string, search: Object = undefined, attachToken: boolean = true)\n    {\n      if (attachToken) this.attachToken();\n      return this.http.delete('/api'+url, {\n        search: (search)?(this.createURLSearchParams(search)):(search),\n        headers: (attachToken)?(this.headers):(undefined)\n      }).map((response: Response) => {\n        return response.json();\n      });\n    }\n\n}\n"]}