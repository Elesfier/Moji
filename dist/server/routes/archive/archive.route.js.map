{"version":3,"sources":["server/routes/archive/archive.route.ts"],"names":[],"mappings":"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","file":"archive.route.js","sourcesContent":["\nimport { Router, Response, Request } from 'express';\nimport { IArchive, ArchiveModel, ListModel, IList, authorization } from '../index';\n\nexport const archive = Router();\n\n////////////////////////////////////////////////////////////////////////////////\n\narchive.get('/archive', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  let responseArchives = { rows: [] };\n  ArchiveModel\n    .find({ user : request['_currentUser']._id})\n    .populate('noteList')\n    .populate('fileList')\n    .exec((error: any, archives: [IArchive]) => {\n      if (error) return response.handler({ DBError: true, error: error });\n      archives.forEach((archive: IArchive) => {\n        //[FIXME]: about this boolean with string 'true'\n        if (!((request.query.showHidden === 'true') || !archive.isHidden)) return;\n        //[REFACTOR]: repair code\n        if (request.query.search && (archive.title.toLowerCase().indexOf(request.query.search.toLowerCase()) == -1)) return;\n        responseArchives.rows.push({\n          data : { id: archive._id },\n          columns: [\n            { content: archive.title },\n            {\n              content: (archive.hasFiles)?String(archive.fileList.length):('-'),\n              type: 'center'\n            },\n            {\n              content: (archive.hasList)?(function(){\n                if (!archive.isCheckList) return String((<any>archive.noteList).list.length);\n                let count = 0;\n                (<any>archive.noteList).list.forEach((item: any)=>{\n                  if(!item.columns[0].content) count++;\n                });\n                return String(count);\n              }()):('-'),\n              type: 'center'\n            }\n          ]\n        });\n      });\n      response.json(responseArchives);\n    });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\narchive.put('/archive', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  let newList = new ListModel({\n    list: []\n  });\n  newList.save();\n\n  ArchiveModel.create({\n    user: request['_currentUser']._id,\n    title: request.body.title || 'none',\n    description: request.body.description || '',\n    hasFiles: request.body.hasFiles || false,\n    hasList: request.body.hasList || false,\n    isCheckList: request.body.isCheckList || false,\n    isHidden: request.body.isHidden || false,\n    noteList: newList._id\n  },(error) => {\n    if (error) return response.handler({ DBError: true, error: error });\n    response.handler({ type: 'ARCHIVE_IS_ADDED' });\n  });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\narchive.delete('/archive/:id', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  ArchiveModel.findOneAndRemove({\n    _id: request.params.id,\n    user: request['_currentUser']._id\n  }).exec(function (error) {\n    if (error) return response.handler({ DBError: true, error: error });\n    response.handler({ type: 'ARCHIVE_IS_REMOVE' });\n  });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\narchive.get('/archive/:id', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  ArchiveModel.findOne({\n    _id: request.params.id,\n    user: request['_currentUser']._id\n  },(error: any, archives: IArchive) => {\n    if (error) return response.handler({ DBError: true, error: error });\n    response.json({\n      title: archives.title,\n      description: archives.description,\n      hasList: archives.hasList,\n      hasFiles: archives.hasFiles,\n      isCheckList: archives.isCheckList,\n      isHidden: archives.isHidden\n    });\n  });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n\narchive.patch('/archive/:id', authorization({\n\n  global: { mustBeLogged: true }\n\n}),(request: Request, response: Response) => {\n\n  ArchiveModel.findOne({\n    _id: request.params.id,\n    user: request['_currentUser']._id\n  })\n  .exec((error: any, archive: IArchive) => {\n    if (error) return response.handler({ DBError: true, error: error });\n    archive.title = request.body.title;\n    archive.description = request.body.description;\n    archive.hasFiles = request.body.newHasFiles;\n    archive.hasList = request.body.newHasList;\n    archive.isCheckList = request.body.newIsCheckList;\n    archive.isHidden = request.body.isHidden;\n    archive.save((error: any)=>{\n      if (error) return response.handler({ DBError: true, error: error });\n      ListModel.findOne({ _id : archive.noteList })\n      .exec((error: any, list: IList)=>{\n        if (error) return response.handler({ DBError: true, error: error });\n        if (request.body.hasList && (request.body.isCheckList !== request.body.newIsCheckList))\n        {\n          request.body.notes.rows.forEach((item, index, noteList)=>{\n            if (request.body.newIsCheckList)\n              noteList[index].columns[0] = { content: false, type: 'checkbox' };\n            else\n              noteList[index].columns[0] = { content: String(index+1), type: 'center' };\n          });\n        }\n        list.list = request.body.notes.rows;\n        list.save((error: any)=>{\n          if (error) return response.handler({ DBError: true, error: error });\n          response.handler({ type: 'ARCHIVE_PATCH_DONE' });\n        });\n      });\n    });\n  });\n\n});\n\n////////////////////////////////////////////////////////////////////////////////\n"]}