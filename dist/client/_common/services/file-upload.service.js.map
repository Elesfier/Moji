{"version":3,"sources":["client/_common/services/file-upload.service.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,sCAA2C;AAC3C,8CAA6C;AAC7C,iFAAsE;AAGtE,IAAa,iBAAiB;IAE5B,2BAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAG,CAAC;IAEzD,kCAAM,GAAb,UAAe,MAAW;QAExB,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC;QACjD,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAAC,MAAM,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAE,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IACnG,CAAC;IAEO,2CAAe,GAAvB,UACE,GAAW,EACX,MAAqB,EACrB,KAAkB,EAClB,SAAiB;QAJnB,iBA4CC;QArCC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAAC,MAAM,CAAC;QAExD,MAAM,CAAC,uBAAU,CAAC,MAAM,CAAC,UAAA,QAAQ;YAC/B,IAAI,QAAQ,GAAa,IAAI,QAAQ,EAAE,CAAC;YACxC,IAAI,GAAG,GAAmB,IAAI,cAAc,EAAE,CAAC;YAC/C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EACrC,CAAC;gBACC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACtD,CAAC;YAED,GAAG,CAAC,kBAAkB,GAAG;gBACvB,EAAE,CAAC,CAAC,GAAG,CAAC,UAAU,KAAK,CAAC,CAAC,CACzB,CAAC;oBACC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CACvB,CAAC;wBACC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACxC,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC;oBACD,IAAI,CACJ,CAAC;wBACC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC/B,CAAC;gBACH,CAAC;YACH,CAAC,CAAC;YAUF,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAC5B,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAE,KAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;YAClF,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAxDA,AAwDC,IAAA;AAxDY,iBAAiB;IAD7B,iBAAU,EAAE;qCAG8B,mDAAmB;GAFjD,iBAAiB,CAwD7B;AAxDY,8CAAiB","file":"file-upload.service.js","sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { LocalStorageService } from './local-storage-service.service';\n\n@Injectable()\nexport class FileUploadService\n{\n  constructor(private localStorageService: LocalStorageService) {}\n\n  public upload (params: any): Observable<any>\n  {\n    params.fieldname = params.fieldname || 'uploads';\n    if (!(params.files.length) || !(params.url)) return;\n    return this.makeFileRequest ('/api' + params.url, params.params, params.files, params.fieldname);\n  }\n\n  private makeFileRequest (\n    url: string,\n    params: Array<String>,\n    files: Array<File>,\n    fieldname: string\n  ): Observable<any> {\n\n    if (!this.localStorageService.get('JOME_TOKEN')) return;\n\n    return Observable.create(observer => {\n      let formData: FormData = new FormData();\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\n      for (let i = 0; i < files.length; i++)\n      {\n        formData.append(fieldname, files[i], files[i].name);\n      }\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4)\n        {\n          if (xhr.status === 200)\n          {\n            observer.next(JSON.parse(xhr.response));\n            observer.complete();\n          }\n          else\n          {\n            observer.error(xhr.response);\n          }\n        }\n      };\n\n      //[TODO]: see loading file to server\n      /*xhr.upload.onprogress = (event) => {\n        this.progress = Math.round(event.loaded / event.total * 100);\n\n        this.progressObserver.next(this.progress);\n      };*/\n\n      //[XXX]: chyba methoda PUT lepiej by tu pasowala\n      xhr.open('POST', url, true);\n      xhr.setRequestHeader('Authorization', this.localStorageService.get('JOME_TOKEN'));\n      xhr.send(formData);\n    });\n  }\n}\n"]}