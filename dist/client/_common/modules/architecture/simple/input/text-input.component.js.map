{"version":3,"sources":["client/_common/modules/architecture/simple/input/text-input.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,sCAA2F;AAC3F,mDAAuD;AA4BvD,IAAa,wBAAwB;IAYnC,kCAAoE,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAVtF,gBAAW,GAAW,EAAE,CAAC;QAC/B,cAAS,GAAW,EAAE,CAAC;QACvB,UAAK,GAAW,GAAG,CAAC;QACb,gBAAW,GAAW,EAAE,CAAC;QAC1B,eAAU,GAAQ,SAAS,CAAC;QACnC,SAAI,GAAQ,SAAS,CAAC;QAEjB,kBAAa,GAAG,IAAI,mBAAY,EAAE,CAAC;QACnC,YAAO,GAAG,IAAI,mBAAY,EAAE,CAAC;IAE6D,CAAC;IAE/G,2CAAQ,GAAR;QAEE,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YAAC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;IACrG,CAAC;IAED,gDAAa,GAAb,UAAe,KAAU;QAEvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACrC,CAAC;IAED,oDAAiB,GAAjB,UAAmB,KAAU;QAE3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED,yDAAsB,GAAtB,UAAwB,KAAU;QAEhC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IACH,+BAAC;AAAD,CAjCA,AAiCC,IAAA;AA/BuB;IAArB,YAAK,CAAC,aAAa,CAAC;;6DAA0B;AAC/B;IAAf,YAAK,CAAC,OAAO,CAAC;;2DAAwB;AACvB;IAAf,YAAK,CAAC,OAAO,CAAC;;uDAAqB;AACb;IAAtB,YAAK,CAAC,cAAc,CAAC;;6DAA0B;AAC1B;IAArB,YAAK,CAAC,aAAa,CAAC;;4DAA6B;AACnC;IAAd,YAAK,CAAC,MAAM,CAAC;;sDAAuB;AAEjB;IAAnB,aAAM,CAAC,UAAU,CAAC;;+DAAoC;AACnC;IAAnB,aAAM,CAAC,UAAU,CAAC;;yDAA8B;AAVtC,wBAAwB;IA1BpC,gBAAS,CAAC;QACT,QAAQ,EAAE,MAAM,CAAC,EAAE;QACnB,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,uuBAqBT;KACF,CAAC;IAac,WAAA,aAAM,CAAC,iBAAU,CAAC,cAAM,OAAA,oCAAmB,EAAnB,CAAmB,CAAC,CAAC,CAAA;qCAA8B,oCAAmB;GAZjG,wBAAwB,CAiCpC;AAjCY,4DAAwB","file":"text-input.component.js","sourcesContent":["\nimport { Component, Input, Inject, forwardRef, Output, EventEmitter } from '@angular/core';\nimport { SimpleFormComponent } from './form.component';\n\n@Component({\n  moduleId: module.id,\n  selector: 'simple-text-input',\n  template: `\n    <div\n      class=\"input-group\"\n      [ngStyle]=\"{ 'width' : width + '%' }\">\n      <span *ngIf=\"leftLabel\" class=\"input-group-addon\">{{leftLabel}}</span>\n      <input #textInputInner\n        (keyup.enter)='onChangeTextInput(textInputInner.value)'\n        type=\"text\"\n        class=\"form-control\"\n        [(ngModel)]=\"bindParent[bind]\"\n        (ngModelChange)=\"onChangeModel($event)\"\n        placeholder=\"{{placeholder}}\">\n      <span *ngIf=\"rightButton\" class=\"input-group-btn\">\n        <button\n          class=\"btn btn-default\"\n          (click)='onClickButtonTextInput(textInputInner.value)'\n          type=\"button\">\n          {{rightButton}}\n        </button>\n      </span>\n    </div>\n  `\n})\nexport class SimpleTextInputComponent\n{\n  @Input('placeholder') placeholder: string = '';\n  @Input('label') leftLabel: string = '';\n  @Input('width') width: number = 100;\n  @Input('button-label') rightButton: string = '';\n  @Input('bind-parent') bindParent: any = undefined;\n  @Input('bind') bind: any = undefined;\n\n  @Output('on-click') onClickButton = new EventEmitter();\n  @Output('on-enter') onEnter = new EventEmitter();\n\n  constructor (@Inject(forwardRef(() => SimpleFormComponent)) private simpleFormComponent: SimpleFormComponent){}\n\n  ngOnInit ()\n  {\n    if (this.simpleFormComponent && !this.bindParent) this.bindParent =  this.simpleFormComponent.bind;\n  }\n\n  onChangeModel (value: any)\n  {\n    this.bindParent[this.bind] = value;\n  }\n\n  onChangeTextInput (value: any)\n  {\n    this.onEnter.emit(value);\n  }\n\n  onClickButtonTextInput (value: any)\n  {\n    this.onClickButton.emit(value);\n  }\n}\n"]}